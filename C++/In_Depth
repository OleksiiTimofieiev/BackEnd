https://itvdn.com/ru/video/cplspls-advanced


- https://itvdn.com/ru/video/cplspls-advanced/function
Lecture 1: auto & decltyp: {
    -  type inference or type deduction:
    int a = 5;
    auto c = a;
    auto d = 5ul;
}

template<typename T>
voidf (T && param)
if T is lvalue
    T -> &
if T == rvalue
    &&

- auto operator
- using, alis
- C++17:
vector<int> a = {1,2,3,4,5};
vector a ={1,2,3,4,}
pair p(3ul,5ul)

- A(const char*)->A<string>
- template<typename T, typenameU>
auto add(const T &first, const &U second)->decltype(first+second) {
    return first + second
}

int a = 50;
dcltype(a)b=10.8
- cout<< typeid()
