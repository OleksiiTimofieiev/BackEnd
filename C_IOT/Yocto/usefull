https://bootlin.com/blog/yocto-project-quickest-instructions-to-generate-beaglebone-images/

- sudo apt install gawk wget git diffstat unzip texinfo gcc build-essential chrpath socat cpio python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping python3-git python3-jinja2 libegl1-mesa libsdl1.2-dev pylint3 xterm python3-subunit mesa-common-dev zstd liblz4-tool -y
- git clone -b kirkstone https://git.yoctoproject.org/git/poky
- source poky/oe-init-build-env
- MACHINE="beaglebone-yocto" bitbake core-image-minimal
- cd tmp/deploy/images/beaglebone-yocto
- dd if=core-image-minimal-beaglebone-yocto.wic of=/dev/mmcblk0 bs=4M

Layers:
- git clone https://github.com/OleksiiTimofieiev/meta-otimofie.git
- git clone -b kirkstone https://github.com/aws4embeddedlinux/meta-aws.git
- git clone -b kirkstone https://github.com/openembedded/meta-openembedded.git




adding ssh:
https://wiki.yoctoproject.org/wiki/Cookbook:Example:Adding_packages_to_your_OS_image

usefull:
- working with core-image-minimal
- bitbake-layers show-recipes *aws*
- ls meta*/recipes*/images/*.bb
- https://github.com/sleepnumberlabs/meta-fuzion/blob/master/recipes-core/images/fuzion-image.bb
- sudo dd bs=4M if=tisdk-default-image-am64xx-evm.wic of=/dev/sdx status=progress && sync
- recipetool create -N bmp280i2cTest -V 1.00 https://github.com/hubshuffle/cmake-hello-world.git

SDK:
- MACHINE="beaglebone-yocto" bitbake core-image-minimal -c populate_sdk
- https://docs.yoctoproject.org/2.1/sdk-manual/sdk-manual.html#the-cross-development-toolchain


AWS:
- aws --region <region> iot describe-endpoint --endpoint-type "iot:Data-ATS"
- https://github.com/aws/aws-iot-device-sdk-python-v2/issues/52

Driver:
- build/local.conf
    MACHINE = "beaglebone-yocto" => ENV in docker
    KERNEL_MODULE_AUTOLOAD += " otimofie_driver"
    INHERIT += "rm_work" ==> Adding this statement deletes the work directory used for building 
    a recipe once the recipe is built. For more information on “rm_work”, 
    see the rm_work class in the Yocto Project Reference Manual.

    PARALLEL_MAKE = "-j 4"
    IMAGE_FSTYPES = "wic"

Layers:
- bitbake-layers add-layer ../meta-openembedded/meta-oe
- bitbake-layers add-layer ../meta-otimofie
- bitbake-layers add-layer ../meta-openembedded/meta-python
- bitbake-layers add-layer ../meta-openembedded/meta-networking
- bitbake-layers add-layer ../meta-aws
- bitbake-layers add-layer ../meta-openembedded/meta-webserver


NFS[https://www.youtube.com/watch?v=SpYTsRk3Dkk]:
- sudo apt-get install nfs-kernel-server
- sudo vi /etc/exports
- /home/olekdsii/Desktop/BackEnd/C_IOT/Yocto/nfs 192.168.8.104(rw,sync,no_subtree_check)
- sudo exportfs -arvf
- sudo systemctl start nfs-kernel-server
- sudo systemctl restart nfs-kernel-server
- sudo systemctl enable nfs-kernel-server
- sudo systemctl status nfs-kernel-server

on client:
- showmount -e 192.168.8.109
- mkdir /mnt/drivers
- mount
- mount -t nfs 192.168.8.109:/home/olekdsii/Desktop/BackEnd/C_IOT/Yocto/nfs /mnt/drivers
- umount /mnt/drivers

