https://coursehunter.net/course/polnoe-rukovodstvo-po-ssl-2020-ot-http-do-https?lesson=24
Lesson: 25

- http => data can be read by a third-party
- https => data can not be read by a third-party

- symmetcric: same key used, AES
- hash == verify integrity of data => during transfer was not changed
- MD5 => 128 bits == obsolete => one way hash; md5 == console
- most popular: sha-256 => shasum,shasum -a 256 || 512 == console
- HMAC == data + secret key

- assymetric: RSA
- slow encryption
- bi-directional data encryption requires RSA key pairs on both sides
- private(keeps in a secret) and public key => signing data, encription
- encryption: only owner of the private key can decrypt the data encrypted by the public key of the owner
- signaturing: hash on the data -> encrypt with private key of the owner -> encrypted hash sent along with the data -> decrypt with public key

- PKI: public key infrastructure
- CA -> intermidiate CA
- certificate: file with data [
  - owner
  - issuer
  - signature of CA
  - public key
]
- openssl genrsa -aes256
- openssl genrsa -aes256 -out private.pem
- openssl rsa -in private.pem -outform PEM -pubout -out public.pem
- openssl genrsa 4096

- ssl/tls == cryptographic protocols {
  - used in https
  - tls using symmetric key
  - tls session:
  after tcp session established
  negotiate cipher suite (list of supported suited) == Client Hello
  web server sends certificate == Server Hello [choosen cipher suite]
  verify server certificate
  generate symmetric key for data encryption
  send/recieve encrypted data
}
