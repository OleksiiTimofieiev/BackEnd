plan: {
  - 1: {
    cache invalidation  
    - оптимизация SQL запросов
    indexes: https://www.youtube.com/watch?v=HubezKbFL7E
    index: https://www.youtube.com/watch?v=39e1vAGD3hg
    index best practices: https://www.youtube.com/watch?v=aZjYr87r1b8

    - hash map in go
    - порядок перебора map
    Самый популярный неправильный ответ: «Gorm, вроде, неплох». Конкурирует с ответом «Я всё пишу руками». Я даже согласен с обоими ответами, но давайте обсудим подробнее — как устроен gorm, и почему вдруг руками.
    Наводящие вопросы: что означает буква M в аббревиатуре ORM? Что на эту букву M есть в gorm? А что такое DAL и зачем он нужен?
    - Какой у вас любимый линтер?
    - Наводящие вопросы: какое отношение линтеры имеют к CI? Зачем нужен CI в процессе разработки?
    - Какие типы мьютексов предоставляет stdlib?
    - Стандартный набор метрик prometheus в Go -программе?
    - Наводящие вопросы: оставив прометей в стороне — что вообще Go-программа способна о себе рассказать? Метрики runtime — что это, и откуда берется?
    - Как встроить стандартный профайлер в свое приложение?
    - Overhead от стандартного профайлера?
    - Какие средства обобщенного программирования есть в Go?w
    - MVCC transactions
    - kafka
    - nginx
    - db requests optimization
    - gRPC in golang: https://www.youtube.com/watch?v=4NdS0hfhkyc&list=PL2WJEuL48sg5KB7ZGnxXMS_aHg49ky7Uz&index=4
    - Rabbit-MQ
    - websocket https://www.youtube.com/watch?v=PmAyjFaC3zQ
    - effective go
    - http2: https://www.youtube.com/watch?v=BWyTZgg77yM
  };

  - 2: databases after main course: {
      - https://www.youtube.com/watch?v=xY_M8TGdm6A&list=PLH-XmS0lSi_zgalbXwsytGNdAlNYmmE5C&index=16
      - https://www.youtube.com/watch?v=dDryrO8y82c&list=PLH-XmS0lSi_zgalbXwsytGNdAlNYmmE5C&index=28
      - https://www.youtube.com/watch?v=Uojy57I-xP0&list=PLH-XmS0lSi_zgalbXwsytGNdAlNYmmE5C&index=27
      - https://www.youtube.com/watch?v=MBfjQBDZqt8
    }

  - 3: {
    - best polling and websocket practices:
    https://www.youtube.com/watch?v=9dMcEfl-wyI
    https://www.youtube.com/watch?v=1tNfKI03qRU
    https://www.youtube.com/watch?v=eP_02zkwM5Y&t=2561s
    https://www.youtube.com/watch?v=OsXjDZ52dyQ
    - deployment on AWS
    - тестирование веб-приложений
    - https://www.youtube.com/watch?v=1qm8eqGYKX0
    - SQL for highload
    - monitoring: some REST book has it
    - working with infrastructure: {-- знание concurrency-паттернов, умение писать безопасный многопоточный код
    - multystage docker: https://www.youtube.com/watch?v=p1dwLKAxUxA&list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE&index=23
    - patterns of microservices: refresh
    - interview questions about microservices
    - security in web development
    - algorithm course
    - ajax
    - Security: XSS, SQL injections, keeping passwords, keeping secrets
    - testing a web server
    - transactions/transactional behaviour
    - sql injections
    - Executor tracing
    - Go-Kit
    - memory model otus
    - typical interview questions: CAP-theorem, JOINS
    - delve
    - python JIT compiler and correspondent problems.
    - web_socket: https://www.youtube.com/watch?v=tfTgPlWKU78&list=PLGN1AjiJJv0lVSKVWMqAwOZvHMLT1qRUh&index=6
    - http versions: 1,2,3?
    - Monitoring, alerting approaches
    - Common attacks types (OWASP)
    - Paxos, Raft
    - Certifications on:
      Cloud computing platforms (AWS, GCP, Microsoft Azure)
      Knowledge in Deployment patterns
    }

  - 4: interview preparation: {
      - вопросы по БД on interview
      - пересмотреть интервью по го
      - typical question for the containers/collections/context/sync package/
      - вопросы по конструкциям языка
      - https://www.youtube.com/watch?v=ryJOS-8hmQo&t=6430s
      - https://www.youtube.com/watch?v=ryJOS-8hmQo&t=1s
    }
  };
}

projects: {
  - TennisBot
  - GymPartner
  - planning and budget with microservices
  - https://www.youtube.com/watch?v=hb-9Lz-nuyM&t=418s
}


Embedded:
Zigbee, Z-Wave, BLE